import logging
from telethon import TelegramClient, events
from telethon.tl.types import InputPeerChannel, Channel
from db import get_db, Channel
from core import settings
logger = logging.getLogger(__name__)


client = TelegramClient(
    "my_session",
    api_id=int(settings.telethon_set.api_id),
    api_hash=str(settings.telethon_set.api_hash),
    device_model="Pixel 7 Pro",
    system_version="Android 13",
    app_version="9.6.1",
    lang_code="ru",
)

async def track_channels(client: TelegramClient):
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤ –∏–∑ –ë–î (—Å—Ç–∞—Ç—É—Å public/private –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è)"""
    async for session in get_db():
        # –ü–æ–ª—É—á–∞–µ–º –í–°–ï –∫–∞–Ω–∞–ª—ã –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
        query = session.query(Channel)
        result = await session.execute(query)
        channels = result.scalars().all()

        if not channels:
            logger.warning("–í –±–∞–∑–µ –Ω–µ—Ç –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
            return

        entities = []
        for channel in channels:
            try:
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ ID (-100123 ‚Üí 123)
                telethon_id = abs(channel.channel_id) - 1000000000000
                entity = await client.get_entity(
                    InputPeerChannel(
                        channel_id=telethon_id,
                        access_hash=0  # –ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —É–∂–µ –≤ –∫–∞–Ω–∞–ª–µ
                    )
                )
                entities.append(entity)
                logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {entity.title} (ID: {channel.channel_id})")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞: {channel.channel_name} (ID: {channel.channel_id}): {str(e)}")

        # –•—ç–Ω–¥–ª–µ—Ä –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        @client.on(events.NewMessage(chats=entities))
        async def handler(event):
            chat = await event.get_chat()
            if event.message.text:
                logger.info(f"üì© {chat.title}: {event.message.text[:200]}...")

        logger.info(f"üîä –ó–∞–ø—É—â–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ {len(entities)} –∫–∞–Ω–∞–ª–æ–≤")
        await client.run_until_disconnected()






